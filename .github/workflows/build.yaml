name: "Build"

on:
  push:
    branches:
      - main
      - release/*
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # https://evilmartians.com/chronicles/build-images-on-github-actions-with-docker-layer-caching
      - name: Verify files changed
        uses: tj-actions/verify-changed-files@v7.1
        id: changed_files
        with:
          files: |
            .github
            tests/build_minerl.py
            Dockerfile
            poetry.lock
            pyproject.toml
      - name: Set up Docker Buildx
        if: steps.changed_files.outputs.files_changed == 'true'
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        if: steps.changed_files.outputs.files_changed == 'true'
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Cache Docker Image
        if: steps.changed_files.outputs.files_changed == 'true'
        uses: actions/cache@v2
        with:
          path: /tmp/image.tar
          key: ${{ runner.os }}-image-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-image-
      - name: Build Dependencies Image
        if: steps.changed_files.outputs.files_changed == 'true'
        run: |
          docker buildx build \
          --target dependencies \
          -t minerl-wrappers:latest \
          --cache-from type=local,src=/tmp/.buildx-cache \
          --cache-to type=local,dest=/tmp/.buildx-cache-new \
          --output type=docker,dest=- . > /tmp/image-new.tar
        # This ugly bit is necessary if you don't want your cache to grow forever
        # till it hits GitHub's limit of 5GB.
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        if: steps.changed_files.outputs.files_changed == 'true'
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
          rm -rf /tmp/image.tar
          mv /tmp/image-new.tar /tmp/image.tar